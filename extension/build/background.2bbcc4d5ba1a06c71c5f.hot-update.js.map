{"version":3,"file":"background.2bbcc4d5ba1a06c71c5f.hot-update.js","mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrEA","sources":["webpack://fix-your-netflix-experiment-extension/./src/pages/Background/Controller.ts","webpack://fix-your-netflix-experiment-extension/webpack/runtime/getFullHash"],"sourcesContent":["import { STORAGE_KEYS } from \"../../config/storage.config\";\nimport { ChromeStorage } from \"../../utils/classes/ChromeStorage\";\nimport { CustomLogger } from \"../../utils/classes/CustomLogger\";\nexport class Controller {\n    constructor() {\n        this.NETFLIX_WATCH_URL = \"https://www.netflix.com/watch\";\n        this.init = async () => {\n            this.logger.log(\"Initializing...\");\n            this.listenForVideoStart();\n        };\n        /**\n         *  Method that keeps track of videos order and limit.\n         *  For the first video in queue the count will be 1 but its index in an array is 0.\n         *  Video count is increased just before injecting the ContentScript.\n         *  It means that n-th video in row has the count of n for the enterity of playback. The index is n-1\n        */\n        this.increaseVideoCount = async () => {\n            const experiment_variables = await ChromeStorage.get_experiment_variables();\n            experiment_variables.video_count += 1;\n            this.logger.log(`Increasing video count to ${experiment_variables.video_count}`);\n            await ChromeStorage.set_single(\"experiment_variables\", experiment_variables);\n        };\n        this.listenForVideoStart = () => {\n            // Code below seems to be the right solution //\n            // onHistoryStateUpdated detects navigation within Netlifx player (next video button)\n            /*\n            chrome.webNavigation.onHistoryStateUpdated.addListener((details) => {\n                this.logger.log(`ON HISTORY STATE UPDATED`)\n                console.log(details)\n                if(details.frameId === 0 && details.url.includes(this.NETFLIX_WATCH_URL)) {\n                    chrome.tabs.get(details.tabId, async (tab) => {\n                        if(tab.url === details.url) {\n                            this.logger.log(\"Entered Netflix Video Player\")\n                            await this.injectScript(details.tabId)\n                        }\n                    });\n                }\n            });\n            */\n            // onCompleted detects navigation using chrome.tabs.update\n            chrome.webNavigation.onCompleted.addListener(details => {\n                if (details.frameId === 0 && details.url.includes(this.NETFLIX_WATCH_URL)) {\n                    chrome.tabs.get(details.tabId, async (tab) => {\n                        if (tab.url === details.url) {\n                            this.logger.log(\"Entered Netflix Video Player\");\n                            await this.injectScript(details.tabId);\n                        }\n                    });\n                }\n            });\n        };\n        this.logger = new CustomLogger(\"[Controller]\");\n    }\n    async injectScript(tabId) {\n        const settings = (await chrome.storage.local.get([STORAGE_KEYS.EXPERIMENT_VARIABLES]))[STORAGE_KEYS.EXPERIMENT_VARIABLES];\n        const experiment_variables = a;\n        if (settings.experiment_running === false) {\n            this.logger.log(\"Extension is not running.\");\n            return;\n        }\n        await this.increaseVideoCount();\n        await chrome.scripting.executeScript({\n            target: {\n                tabId: tabId\n            },\n            files: [\"content.bundle.js\"] // ContentScript filename has to match names in webpack.config.js\n        });\n        this.logger.log(\"ContentScript has been injected\");\n    }\n}\n","__webpack_require__.h = () => (\"e1a3ac86ef1988324689\")"],"names":[],"sourceRoot":""}