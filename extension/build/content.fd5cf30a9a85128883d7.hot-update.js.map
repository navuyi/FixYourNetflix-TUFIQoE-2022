{"version":3,"file":"content.fd5cf30a9a85128883d7.hot-update.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://fix-your-netflix-experiment-extension/./src/pages/Content/CustomPlayer.ts","webpack://fix-your-netflix-experiment-extension/./src/pages/Content/index.ts","webpack://fix-your-netflix-experiment-extension/./src/utils/classes/CustomLogger.ts","webpack://fix-your-netflix-experiment-extension/./src/utils/time_utils.ts","webpack://fix-your-netflix-experiment-extension/./src/utils/wait_for_video_to_load.ts","webpack://fix-your-netflix-experiment-extension/webpack/runtime/define property getters","webpack://fix-your-netflix-experiment-extension/webpack/runtime/getFullHash","webpack://fix-your-netflix-experiment-extension/webpack/runtime/make namespace object"],"sourcesContent":["import { wait_for_video_to_load } from \"../../utils/wait_for_video_to_load\";\nimport { CustomLogger } from \"../../utils/classes/CustomLogger\";\nexport class CustomPlayer {\n    constructor() {\n        this.elements_to_remove = [\"control-play-pause-pause\", \"control-play-pause-play\", \"control-back10\",\n            \"control-forward10\", \"control-speed\", \"control-fullscreen-enter\",\n            \"control-fullscreen-exit\", \"control-episodes\", \"control-next\", \"timeline-bar\"];\n        this.elements_to_leave = [\n            \"control-volume-off\",\n            \"control-volume-low\",\n            \"control-volume-medium\",\n            \"control-volume-high\",\n            \"control-audio-subtitle\"\n        ];\n        this.init = async () => {\n            await wait_for_video_to_load();\n            await this.create_shutter();\n            const video_canvas = document.querySelectorAll(\"[data-uia='video-canvas']\")[0];\n            video_canvas.addEventListener(\"mousemove\", () => {\n                let controls_container = document.getElementsByClassName(\"watch-video--bottom-controls-container\")[0];\n                this.elements_to_remove.forEach(element_data_uia => {\n                    const element = this.get_element(controls_container, element_data_uia);\n                    if (element)\n                        element.remove();\n                });\n                this.elements_to_leave.forEach(element_data_uia => {\n                    const element = this.get_element(controls_container, element_data_uia);\n                    if (element)\n                        this.modify_element(element);\n                });\n            });\n        };\n        this.get_element = (container, element_data_uia) => {\n            const selector = `[data-uia='${element_data_uia}']`;\n            return container.querySelectorAll(selector)[0];\n        };\n        this.logger = new CustomLogger(\"[CustomPlayer]\");\n    }\n    modify_element(element) {\n        if (element && element.parentNode) {\n            const el = element;\n            const parent_node = element.parentNode;\n            el.style.zIndex = \"10100\";\n            parent_node.style.zIndex = \"10100\";\n        }\n    }\n    async create_shutter() {\n        const video_canvas = document.querySelectorAll(\"[data-uia='video-canvas']\")[0];\n        const shutter = document.createElement(\"div\");\n        shutter.id = \"transparent_panel\";\n        shutter.style.width = \"100vw\";\n        shutter.style.height = \"100vh\";\n        shutter.style.position = \"absolute\";\n        shutter.style.left = \"0\";\n        shutter.style.top = \"0\";\n        shutter.style.backgroundColor = \"lightblue\";\n        shutter.style.display = \"flex\";\n        shutter.style.justifyContent = \"center\";\n        shutter.style.alignItems = \"center\";\n        shutter.style.flexDirection = \"column\";\n        shutter.style.zIndex = \"10000\";\n        shutter.style.opacity = \"0\";\n        shutter.onclick = (e) => {\n            e.stopPropagation();\n        };\n        video_canvas.appendChild(shutter);\n    }\n}\n","import { CustomPlayer } from \"./CustomPlayer\";\nconst init = async () => {\n    //const statsAnalyzer = new StatsAnalyzer()\n    await statsAnalyzer.init();\n    const customPlayer = new CustomPlayer();\n    await customPlayer.init();\n};\nconsole.log(\"ASDASDASD\");\ninit();\n","import { get_local_datetime } from \"../time_utils\";\nexport class CustomLogger {\n    constructor(prefix) {\n        this.log = (content) => {\n            const prefix_date = `${this.prefix} | ${get_local_datetime(new Date())} |`;\n            this.original_logger(prefix_date, content);\n        };\n        this.prefix = prefix;\n        this.original_logger = console.log;\n    }\n}\n","export const get_local_datetime = (object) => {\n    const year = object.getFullYear();\n    const month = (object.getMonth() + 1).toString().padStart(2, \"0\");\n    const day = object.getDate().toString().padStart(2, \"0\");\n    const hours = object.getHours().toString().padStart(2, \"0\");\n    const minutes = object.getMinutes().toString().padStart(2, \"0\");\n    const seconds = object.getSeconds().toString().padStart(2, \"0\");\n    const milliseconds = object.getMilliseconds().toString().padStart(3, \"0\");\n    return `${year}-${month}-${day}T${hours}:${minutes}:${seconds}.${milliseconds}`; // <-- Local datetime in extended ISO format ''YYYY-MM-DDTHH:MM:SS:XXX''\n};\nexport const get_local_datetime_and_timezone = (object) => {\n    // Get the datetime\n    const year = object.getFullYear();\n    const month = (object.getMonth() + 1).toString().padStart(2, \"0\");\n    const day = object.getDate().toString().padStart(2, \"0\");\n    const hours = object.getHours().toString().padStart(2, \"0\");\n    const minutes = object.getMinutes().toString().padStart(2, \"0\");\n    const seconds = object.getSeconds().toString().padStart(2, \"0\");\n    const milliseconds = object.getMilliseconds().toString().padStart(3, \"0\");\n    const datetime = `${year}-${month}-${day}T${hours}:${minutes}:${seconds}.${milliseconds}`;\n    // Get timezone offset in +/- HH:MM format\n    const timezone_offset_min = object.getTimezoneOffset();\n    const offset_hrs = Math.abs(timezone_offset_min / 60);\n    const offset_min = Math.abs(timezone_offset_min % 60);\n    if (timezone_offset_min <= 0) {\n        const timezone_standard = \"+\" + offset_hrs.toString().padStart(2, \"0\") + \":\" + offset_min.toString().padStart(2, \"0\");\n        return datetime + timezone_standard;\n    }\n    else {\n        const timezone_standard = \"-\" + offset_hrs.toString().padStart(2, \"0\") + \":\" + offset_min.toString().padStart(2, \"0\");\n        return datetime + timezone_standard;\n    }\n};\n","/**\n * Function waits for the essential html elements to be loaded and available for manipulation.\n * @returns {Promise<unknown>}\n */\nexport const wait_for_video_to_load = async () => {\n    return new Promise((resolve) => {\n        let interval;\n        interval = setInterval(async () => {\n            try {\n                const video = document.getElementsByTagName(\"video\")[0];\n                const video_canvas = document.querySelectorAll(\"[data-uia='video-canvas']\")[0];\n                if (video && video_canvas) {\n                    clearInterval(interval); // stop the retrying process - must be first\n                    console.log(\"HTML video element is loaded. Proceeding...\");\n                    resolve();\n                }\n                else {\n                    console.log(\"Video element not found! Retrying...\");\n                }\n            }\n            catch (err) {\n                console.log(err);\n            }\n        }, 50);\n    });\n};\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.h = () => (\"f286c73159bd49399721\")","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"names":[],"sourceRoot":""}